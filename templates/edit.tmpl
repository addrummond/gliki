## Copyright (C) 2007 Alex Drummond <a.d.drummond@gmail.com>
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation; either version 2
## of the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 51 Franklin Street, Fifth Floor,
## Boston, MA  02110-1301, USA.

#import urllib
#import my_utils
#import links
#import htmlutils
#from templates.base import base

#extends base

## Edit conflicts have a special title
#def title
    #if $getVar('error', False) and $error == 'edit_conflict'
        Edit conflict - $article_title
    #else
        Editing - $article_title
    #end if
#end def

#def body
    #if $getVar('error', False)
        #if $error == 'edit_conflict'
            <p class="error">
                Another user has revised the page since you started editing it.
            </p>
            <p>
                The diff of this user's edits with the current revision
                of the article is as follows:
            </p>
            <div class="diff-box">
                $diff_xhtml
            </div>
        #elif $error == 'bad_title_char'
            <p class="error">
                Titles cannot contain dashes or underscores
                because these characters are used in place of spaces in wiki URLs.
        #elif $error == 'parse_error'
            <p class="error">
                At line $line, column $column: $parse_error.
            </p>
            <p class="error">
                If you are using Firefox
                and have Javacript turned on,
                the region in the text box near the error
                will have been highlighted.
            </p>
            ## Using document.write here so the link doesn't appear if
            ## Javascript isn't enabled.
            <script type="text/javascript">
            <!--
            document.write('<p class="error-loc"><a class="action" href="javascript:setErrorHighlighting();">&laquo;Highlight error&raquo;</a></p>');
            -->
            </script>
        #elif $error == 'preview_redirect'
            <p class="error">
                You cannot preview a redirect.
            </p>
        #elif $error == 'circular_redirect'
        <p class="error">
            Committing this revision would lead to a circular redirect:
            ##<%= (' &rarr; ').join(map(htmlutils.htmlencode, redirects)) %>
        </p>
        #elif $error == 'rename_to_existing'
            <p class="error">
                You cannot rename &lsquo;$old_article_title&rsquo; to
                <a class="article_ref" href="<%= links.article_link(article_title) %>">$article_title</a>
                because an article of that name already exists.
            </p>
        #end if
    #end if

    #if $getVar('preview', False)
        <p>
            <b class="error">This is a preview. Changes have not yet been saved.</b>
        </p>
        <p>
            <a class="action" href="#____edit">&raquo; edit your changes</a>
        </p>
<div class="preview_background">
$preview
</div>
    <hr />
    #end if

    <form style="width:100%;" class="edit" id="____edit" method="POST"
          action="<%= self.getVar('threads_id', False) and links.revise_link_by_threads_id(self.getVar('threads_id')) or links.revise_link_by_title(self.getVar('article_title')) %>">
        #if $getVar('threads_id', False) and $getVar('article_title', False)
        <input type="hidden" name="redundant_title" value="$old_article_title"></input>
        #end if
        <input type="hidden" name="edit_time" value="$edit_time"></input>

        <label class="f-title" for="____title">Title</label>
        <input class="f-title" id="____title" type="text" name="new_title" value="$article_title" size="70"></input>
        <br />
        <label class="f-comment" for="____comment">Comment</label>
        <input class="f-comment" id="____comment" type="text" name="comment" value="$comment" size="70"></input>
        <br />
        <label for="____t1">Enter your text here:</label>
        <textarea id="____t1" style="width: 100%;" name="source" cols="80" rows="25">$article_source</textarea>
        <input name="update" type="submit" value="Update page"></input>
        <input name="preview" type="submit" value="Preview changes"></input>
    </form>
    $LICENSE_BOILERPLATE_XHTML

    <form>
        <input type="hidden" id="____errorLineNumber" value="$getVar('line', '0')"></input>
        <input type="hidden" id="____errorColumnNumber" value="$getVar('column', '0')"></input>
    </form>
    <script type="text/javascript">
    <!--
    function lineColToIndex(str, line, col) {
        // First get the index of the beginning of the line.
        var i;
        for (i = 0; i < str.length && line > 1; ++i) {
            if (str[i] == '\n') {
                line -= 1;
            }
            else if (str[i] == '\r') {
                line -= 1;
                // Presumably '\n' will follow. However, for the purposes of
                // cursor positioning, I.E. treats '\r\n' as a single char.
                if (document.selection) {
                    ++i;
                }
            }
        }

        return i + col - 1;
    }

    function setCursorPos(textArea, index) {
        if (textArea.selectionStart) { // Mozilla
            textArea.selectionStart = index;
            textArea.selectionEnd = index == 0 ? index : index + 5;
        }
        else if (document.selection) { // IE.

        }
    }

    function setErrorHighlighting() {
        var text = document.getElementById('____t1')
        setCursorPos(
            text,
            lineColToIndex(
                text.value,
                parseInt(document.getElementById('____errorLineNumber').value),
                parseInt(document.getElementById('____errorColumnNumber').value)
            )
        );

        text.focus();
    }

    if (document.getElementById('____errorLineNumber').value != '0' && document.getElementById('____errorColumnNumber').value != '0') {
        setErrorHighlighting();
    }
    -->
    </script>
#end def

